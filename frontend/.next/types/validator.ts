// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ..\..\app\(auth)\login\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\(auth)\\login\\page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ..\..\app\(auth)\signup\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\(auth)\\signup\\page.js")
  handler satisfies AppPageConfig<"/signup">
}

// Validate ..\..\app\(protected)\dashboard\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\(protected)\\dashboard\\page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ..\..\app\[username]\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\[username]\\page.js")
  handler satisfies AppPageConfig<"/[username]">
}








